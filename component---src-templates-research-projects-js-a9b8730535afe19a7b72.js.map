{"version":3,"sources":["webpack:///./src/templates/research-projects.js","webpack:///./src/components/publication-card.js"],"names":["data","researchProject","publications","locale","pageContext","researchProjectNode","getLocalizedNodes","nodes","defaultLocale","shift","publicationsNodes","sort","a","b","frontmatter","year","html","excerpt","title","description","className","dangerouslySetInnerHTML","__html","length","id","map","node","key","query","PublicationCard","useState","isAbstractVisible","setAbstractVisibility","to","fields","slug","journal","onClick","cn"],"mappings":"oNAYe,sBAA2E,IAAD,IAAvEA,KAAQC,EAA+D,EAA/DA,gBAAiBC,EAA8C,EAA9CA,aAA+BC,EAAe,EAA9BC,YAAeD,OAClEE,EAAsBC,YAAkBL,EAAgBM,MAAOJ,EAAQK,iBAAeC,QACtFC,EAAoBJ,YAAkBJ,EAAaK,MAAOJ,EAAQK,iBACrEG,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEC,YAAYC,MAAQH,EAAEE,YAAYC,QAGrDC,EAKEX,EALFW,KACAC,EAIEZ,EAJFY,QAEEC,EAEAb,EAHFS,YACEI,MAIJ,OACE,kBAAC,IAAD,CAAQA,MAAOA,EAAOC,YAAaF,GACjC,6BAASG,UAAU,oBACjB,wBAAIC,wBAAyB,CAAEC,OAAQJ,KACvC,iCACE,yBAAKE,UAAU,yCACbC,wBAAyB,CAAEC,OAAQN,MAIrCN,EAAkBa,OAAS,GAE3B,iCACE,4BACE,kBAAC,IAAD,CAAkBC,GAAG,wCAEvB,yBAAKJ,UAAU,wBACZV,EAAkBe,KACjB,SAAAC,GAAI,OAEA,kBAAC,IAAD,CAAiBA,KAAMA,EAAMC,IAAKD,EAAKF,aAWpD,IAAMI,EAAK,c,iCCxDlB,wFAOaC,GAPb,OAO+B,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAAW,EACQI,oBAAS,GAArDC,EADoC,KACjBC,EADiB,KAO3C,OACE,6BAASZ,UAAU,qDACjB,wBAAIA,UAAU,2BACZ,kBAAC,IAAD,CAAMa,GAAIP,EAAKQ,OAAOC,KAAMf,UAAU,gCACpC,0BAAMC,wBAAyB,CAAEC,OAAQI,EAAKZ,YAAYI,WAG9D,6BAAMQ,EAAKZ,YAAYsB,SACvB,yBAAKhB,UAAU,6BAETM,EAAKV,MACP,4BAAQI,UAAU,qCAChBiB,QAhBuB,WAC/BL,GAAuBD,KAiBf,kBAAC,IAAD,CAAkBP,GAAG,qBAGzB,kBAAC,IAAD,CAAMJ,UAAU,yBAAyBa,GAAIP,EAAKQ,OAAOC,MACvD,kBAAC,IAAD,CAAkBX,GAAG,0BAGzB,2BACEJ,UAAWkB,IAAG,6BAA8B,CAAE,sCAAuCP,IACrFV,wBAAyB,CAAEC,OAAQI,EAAKV","file":"component---src-templates-research-projects-js-a9b8730535afe19a7b72.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { FormattedMessage } from \"react-intl\"\n\nimport { Layout } from \"../components/layout\"\nimport { getLocalizedNodes } from \"../intl/utils\"\nimport { defaultLocale } from \"../intl/locales\"\nimport { PublicationCard } from \"../components/publication-card\"\n\nimport \"./research-projects.scss\"\n\n\nexport default ({ data: { researchProject, publications }, pageContext: { locale } }) => {\n  const researchProjectNode = getLocalizedNodes(researchProject.nodes, locale, defaultLocale).shift()\n  const publicationsNodes = getLocalizedNodes(publications.nodes, locale, defaultLocale)\n    .sort((a, b) => +b.frontmatter.year - +a.frontmatter.year)\n\n  const {\n    html,\n    excerpt,\n    frontmatter: {\n      title,\n    },\n  } = researchProjectNode\n\n  return (\n    <Layout title={title} description={excerpt}>\n      <article className=\"research-project\">\n        <h1 dangerouslySetInnerHTML={{ __html: title }} />\n        <section>\n          <div className=\"research-project__card card card--left\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </section>\n        {\n          publicationsNodes.length > 0\n          &&\n          <section>\n            <h2>\n              <FormattedMessage id=\"research-project-page.publications\" />\n            </h2>\n            <div className=\"member__publications\">\n              {publicationsNodes.map(\n                node =>\n                  (\n                    <PublicationCard node={node} key={node.id} />\n                  ),\n              )}\n            </div>\n          </section>\n        }\n      </article>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query($slug: String!, $name: String!) {\n        researchProject: allMarkdownRemark(filter: { fields: { slug: { eq: $slug }}}) {\n            nodes {\n                html\n                excerpt\n                frontmatter {\n                    title\n                }\n                fields {\n                    slug\n                    locale\n                }\n            }\n        }\n        publications: allMarkdownRemark(filter: {\n            fields: { type: {eq: \"publications\"}  },\n            frontmatter: { researchProjects: { eq: $name } }\n        }) {\n            nodes {\n                id\n                html\n                frontmatter {\n                    title\n                    journal\n                    year\n                    author\n                }\n                fields {\n                    slug\n                    locale\n                }\n            }\n        }\n    }\n`\n","import React, { useState } from \"react\"\nimport cn from \"classnames\"\nimport { FormattedMessage } from \"react-intl\"\nimport { Link } from \"../intl/link\"\n\nimport \"./publication-card.scss\"\n\nexport const PublicationCard = ({ node }) => {\n  const [isAbstractVisible, setAbstractVisibility] = useState(false)\n\n  const toggleAbstractVisibility = () => {\n    setAbstractVisibility(!isAbstractVisible)\n  }\n\n  return (\n    <article className=\"publication-card card card--left card--with-hover\">\n      <h3 className=\"publication-card__title\">\n        <Link to={node.fields.slug} className=\"publication-card__title-link\">\n          <span dangerouslySetInnerHTML={{ __html: node.frontmatter.title }} />\n        </Link>\n      </h3>\n      <div>{node.frontmatter.journal}</div>\n      <nav className=\"publication-card__links\">\n        {\n          !!node.html &&\n          <button className=\"link-button publication-card__link\"\n            onClick={toggleAbstractVisibility}\n          >\n            <FormattedMessage id=\"common.abstract\" />\n          </button>\n        }\n        <Link className=\"publication-card__link\" to={node.fields.slug}>\n          <FormattedMessage id=\"common.more-details\" />\n        </Link>\n      </nav>\n      <aside\n        className={cn(\"publication-card__abstract\", { \"publication-card__abstract--visible\": isAbstractVisible })}\n        dangerouslySetInnerHTML={{ __html: node.html }}\n      />\n    </article>\n  )\n}\n"],"sourceRoot":""}