{"version":3,"sources":["webpack:///./src/components/publication-card.js","webpack:///./src/pages/publications.js","webpack:///./src/utils/group-by.js"],"names":["PublicationCard","node","useState","isAbstractVisible","setAbstractVisibility","className","dangerouslySetInnerHTML","__html","frontmatter","title","journal","html","onClick","to","fields","slug","cn","keyGetter","publications","data","allMarkdownRemark","edges","groupedByYear","e","year","reduce","rv","x","push","years","Object","keys","sort","reverse","map","key","id","query"],"mappings":"gMAOaA,G,OAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACQC,oBAAS,GAArDC,EADoC,KACjBC,EADiB,KAO3C,OACE,yBAAKC,UAAU,oBACb,wBAAIA,UAAU,0BAA0BC,wBAAyB,CAAEC,OAAQN,EAAKO,YAAYC,SAC5F,6BAAMR,EAAKO,YAAYE,SACvB,yBAAKL,UAAU,6BAETJ,EAAKU,MACP,uBAAGN,UAAU,yBAAyBO,QAXb,WAC/BR,GAAuBD,KAUjB,aAEF,kBAAC,IAAD,CAAME,UAAU,yBAAyBQ,GAAIZ,EAAKa,OAAOC,MAAzD,cAEF,yBACEV,UAAWW,IAAG,6BAA8B,CAAE,sCAAuCb,IACrFG,wBAAyB,CAAEC,OAAQN,EAAKU,W,sCCpBjC,sBAAe,ICPFM,EDQtBC,EADuB,EAAXC,KACQC,kBAAkBC,MAEtCC,GCVsBL,EDUgB,SAAAM,GAAC,OAAIA,EAAEtB,KAAKO,YAAYgB,MAAtCN,ECTlBO,QAAO,SAASC,EAAIC,GAE5B,OADCD,EAAGT,EAAUU,IAAMD,EAAGT,EAAUU,KAAO,IAAIC,KAAKD,GAC1CD,IACN,KDQCG,EAAQC,OAAOC,KAAKT,GAAeU,OAAOC,UAE9C,OACE,kBAAC,IAAD,KACE,6BACE,0CAGA,yBAAK5B,UAAU,gBACZwB,EAAMK,KACL,SAAAV,GAAI,OACF,oCACE,wBAAInB,UAAU,qBAAqB8B,IAAKX,GAAOA,GAC9CF,EAAcE,GAAMU,KACnB,gBAAGjC,EAAH,EAAGA,KAAH,OAEI,kBAAC,EAAD,CAAiBA,KAAMA,EAAMkC,IAAKlC,EAAKmC,gBArB9C,IAmCFC,EAAK","file":"component---src-pages-publications-js-08b3573d512d2bddc302.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport cn from \"classnames\"\n\nimport \"./publication-card.scss\"\n\nexport const PublicationCard = ({ node }) => {\n  const [isAbstractVisible, setAbstractVisibility] = useState(false)\n\n  const toogleAbstractVisibility = () => {\n    setAbstractVisibility(!isAbstractVisible)\n  }\n\n  return (\n    <div className=\"publication-card\">\n      <h3 className=\"publication-card__title\" dangerouslySetInnerHTML={{ __html: node.frontmatter.title }} />\n      <div>{node.frontmatter.journal}</div>\n      <div className=\"publication-card__links\">\n        {\n          !!node.html &&\n          <a className=\"publication-card__link\" onClick={toogleAbstractVisibility}>Аннотация</a>\n        }\n        <Link className=\"publication-card__link\" to={node.fields.slug}>Подробнее</Link>\n      </div>\n      <div\n        className={cn(\"publication-card__abstract\", { \"publication-card__abstract--visible\": isAbstractVisible })}\n        dangerouslySetInnerHTML={{ __html: node.html }}\n      />\n    </div>\n  )\n}\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport \"./publications.scss\"\nimport { PublicationCard } from \"../components/publication-card\"\nimport { groupBy } from \"../utils/group-by\"\n\nexport default ({ data }) => {\n  let publications = data.allMarkdownRemark.edges\n\n  let groupedByYear = groupBy(publications, e => e.node.frontmatter.year)\n\n  let years = Object.keys(groupedByYear).sort().reverse();\n\n  return (\n    <Layout>\n      <div>\n        <h1>\n          Публикации\n        </h1>\n        <div className=\"publications\">\n          {years.map(\n            year => (\n              <>\n                <h2 className=\"publications__year\" key={year}>{year}</h2>\n                {groupedByYear[year].map(\n                  ({ node }) =>\n                    (\n                      <PublicationCard node={node} key={node.id} />\n                    ),\n                )}\n              </>\n            ),\n          )}\n\n\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(filter: {fields: {type: {eq: \"publications\"}}}){\n            totalCount\n            edges {\n                node {\n                    id\n                    html\n                    frontmatter {\n                        title\n                        journal\n                        year\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n","export function groupBy(xs, keyGetter) {\n  return xs.reduce(function(rv, x) {\n    (rv[keyGetter(x)] = rv[keyGetter(x)] || []).push(x)\n    return rv\n  }, {})\n}\n\n"],"sourceRoot":""}