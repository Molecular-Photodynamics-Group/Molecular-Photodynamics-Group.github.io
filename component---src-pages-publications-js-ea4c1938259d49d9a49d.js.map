{"version":3,"sources":["webpack:///./src/pages/publications.js","webpack:///./src/utils/group-by.js","webpack:///./src/components/publication-card.js","webpack:///./node_modules/classnames/index.js"],"names":["keyGetter","publications","data","allMarkdownRemark","edges","groupedByYear","e","node","frontmatter","year","reduce","rv","x","push","years","Object","keys","sort","reverse","id","className","map","key","query","PublicationCard","useState","isAbstractVisible","setAbstractVisibility","dangerouslySetInnerHTML","__html","title","journal","html","onClick","to","fields","slug","cn","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","Array","isArray","inner","apply","call","join","module","exports"],"mappings":"yNAUe,sBAAe,ICVFA,EDWtBC,EADuB,EAAXC,KACQC,kBAAkBC,MAEtCC,GCbsBL,EDagB,SAAAM,GAAC,OAAIA,EAAEC,KAAKC,YAAYC,MAAtCR,ECZlBS,QAAO,SAASC,EAAIC,GAE5B,OADCD,EAAGX,EAAUY,IAAMD,EAAGX,EAAUY,KAAO,IAAIC,KAAKD,GAC1CD,IACN,KDWCG,EAAQC,OAAOC,KAAKX,GAAeY,OAAOC,UAE9C,OACE,kBAAC,IAAD,KACE,6BACE,4BACE,kBAAC,mBAAD,CAAkBC,GAAG,wBAEvB,yBAAKC,UAAU,gBACZN,EAAMO,KACL,SAAAZ,GAAI,OACF,yBAAKW,UAAU,wBAAwBE,IAAKb,GAC1C,wBAAIW,UAAU,sBAAsBX,GACnCJ,EAAcI,GAAMY,KACnB,gBAAGd,EAAH,EAAGA,KAAH,OAEI,kBAAC,IAAD,CAAiBA,KAAMA,EAAMe,IAAKf,EAAKY,gBArB9C,IAiCFI,EAAK,c,iCE3ClB,gFAMaC,GANb,OAM+B,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KAAW,EACQkB,oBAAS,GAArDC,EADoC,KACjBC,EADiB,KAO3C,OACE,yBAAKP,UAAU,oCACb,wBAAIA,UAAU,0BAA0BQ,wBAAyB,CAAEC,OAAQtB,EAAKC,YAAYsB,SAC5F,6BAAMvB,EAAKC,YAAYuB,SACvB,yBAAKX,UAAU,6BAETb,EAAKyB,MACP,4BAAQZ,UAAU,qCAChBa,QAZuB,WAC/BN,GAAuBD,KAaf,kBAAC,mBAAD,CAAkBP,GAAG,qBAGzB,kBAAC,OAAD,CAAMC,UAAU,yBAAyBc,GAAI3B,EAAK4B,OAAOC,MACvD,kBAAC,mBAAD,CAAkBjB,GAAG,0BAGzB,yBACEC,UAAWiB,IAAG,6BAA8B,CAAE,sCAAuCX,IACrFE,wBAAyB,CAAEC,OAAQtB,EAAKyB,Y,oBChChD,QAAQ,IASR,WACE,aAEA,IAAIM,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQ5B,KAAKgC,QACR,GAAIE,MAAMC,QAAQH,IAAQA,EAAID,OAAQ,CAC3C,IAAIK,EAAQT,EAAWU,MAAM,KAAML,GAE/BI,GACFR,EAAQ5B,KAAKoC,QAEV,GAAgB,WAAZH,EACT,IAAK,IAAIxB,KAAOuB,EACVP,EAAOa,KAAKN,EAAKvB,IAAQuB,EAAIvB,IAC/BmB,EAAQ5B,KAAKS,IAMrB,OAAOmB,EAAQW,KAAK,KAGeC,EAAOC,SAC1Cd,EAAoB,QAAIA,EACxBa,EAAOC,QAAUd,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL","file":"component---src-pages-publications-js-ea4c1938259d49d9a49d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { FormattedMessage } from \"gatsby-plugin-intl\"\n\nimport Layout from \"../components/layout\"\nimport { PublicationCard } from \"../components/publication-card\"\nimport { groupBy } from \"../utils/group-by\"\n\nimport \"./publications.scss\"\n\nexport default ({ data }) => {\n  let publications = data.allMarkdownRemark.edges\n\n  let groupedByYear = groupBy(publications, e => e.node.frontmatter.year)\n\n  let years = Object.keys(groupedByYear).sort().reverse()\n\n  return (\n    <Layout>\n      <div>\n        <h1>\n          <FormattedMessage id=\"pages.publications\" />\n        </h1>\n        <div className=\"publications\">\n          {years.map(\n            year => (\n              <div className=\"publications__section\" key={year}>\n                <h2 className=\"publications__year\">{year}</h2>\n                {groupedByYear[year].map(\n                  ({ node }) =>\n                    (\n                      <PublicationCard node={node} key={node.id} />\n                    ),\n                )}\n              </div>\n            ),\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query {\n        allMarkdownRemark(filter: {fields: {type: {eq: \"publications\"}}}){\n            totalCount\n            edges {\n                node {\n                    id\n                    html\n                    frontmatter {\n                        title\n                        journal\n                        year\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n","export function groupBy(xs, keyGetter) {\n  return xs.reduce(function(rv, x) {\n    (rv[keyGetter(x)] = rv[keyGetter(x)] || []).push(x)\n    return rv\n  }, {})\n}\n\n","import React, { useState } from \"react\"\nimport cn from \"classnames\"\nimport { FormattedMessage, Link } from \"gatsby-plugin-intl\"\n\nimport \"./publication-card.scss\"\n\nexport const PublicationCard = ({ node }) => {\n  const [isAbstractVisible, setAbstractVisibility] = useState(false)\n\n  const toogleAbstractVisibility = () => {\n    setAbstractVisibility(!isAbstractVisible)\n  }\n\n  return (\n    <div className=\"publication-card card card--left\">\n      <h3 className=\"publication-card__title\" dangerouslySetInnerHTML={{ __html: node.frontmatter.title }} />\n      <div>{node.frontmatter.journal}</div>\n      <div className=\"publication-card__links\">\n        {\n          !!node.html &&\n          <button className=\"link-button publication-card__link\"\n            onClick={toogleAbstractVisibility}\n          >\n            <FormattedMessage id=\"common.abstract\" />\n          </button>\n        }\n        <Link className=\"publication-card__link\" to={node.fields.slug}>\n          <FormattedMessage id=\"common.more-details\" />\n        </Link>\n      </div>\n      <div\n        className={cn(\"publication-card__abstract\", { \"publication-card__abstract--visible\": isAbstractVisible })}\n        dangerouslySetInnerHTML={{ __html: node.html }}\n      />\n    </div>\n  )\n}\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}